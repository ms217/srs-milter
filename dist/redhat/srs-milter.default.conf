# verbose output
#verbose

# filename where to store process PID
#pidfile = /var/run/srs-milter/default.pid

# milter socket
# {unix|local}:/path/to/file -- a named pipe.
# inet:port@{hostname|ip-address} -- an IPV4 socket.
# inet6:port@{hostname|ip-address} -- an IPV6 socket.
socket = inet:12345@0.0.0.0

# milter timeout
#timeout = 0

# SRS encode the envelope sender of non-local-destined mail
forward

# SRS decode any envelope recipients of local SRS addresses
reverse

# all local mail domains for that we accept mail
# starting domain name with "." match also all subdomains
local-domain = example.com
local-domain = .example.com
local-domain = example.net

# exclude authenticated users from SRS rewriting
# NOTE: you almost certainly don't want to enable this option
# unless you have also full control of the sender/recipient,
# because otherwise this configuration force srs-milter to skip
# SRS rewriting for all messages including the one that would
# normally require SRS rewriting
#norewrite-smtpauth = 0

# exclude smtp client address from SRS rewriting
# NOTE: you almost certainly don't want to use this option
# unless you really want srs-milter not to touch sender
# addresses for mails that comes from specific client address
#norewrite-client-address = 127.0.0.1
#norewrite-client-address = IPv6:::1

# If enabled, rewrite addresses that will only fail instead of softfail (~) and fail (-)
# Default: 0 (softfail & fail)
srs-onlyonfailrewrite = 0

# our SRS domain name
srs-domain = example.com

# secret string for SRS hashing algorithm
srs-secret = secret

# SRS options
#srs-alwaysrewrite
#srs-hashlength = 4
#srs-hashmin = 4
#srs-maxage = 21

# SRS address separator must be one of '+' '-' '=' (default: libsrs2 default)
#srs-separator = =

# use SRS only if sender domain use SPF that can fail (default: false)
spf-check

# use this heloname for SPF checks (default: gethostname())
#spf-heloname = mail.example.com

# use this address for SPF checks (default: gethostaddr())
#spf-address = 123.123.123.123
